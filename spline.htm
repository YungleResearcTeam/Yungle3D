<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>My first three.js app</title>
    <style>
      body {
        margin: 0;
      }
    </style>
  </head>
  <body>
    <h1>Esta es una prueba de ThreeJS</h1>
    <div id="info"><a href="spline.htm">Description </a></div>
    <!-- ! THIS IMPORTS THREE JS TWICE
        <script src="https://threejs.org/build/three.js"></script> 
    -->
    <script type="importmap">
        {
          "imports": {
            "@splinetool/loader": "https://unpkg.com/@splinetool/loader@0.9.115/build/SplineLoader.js",
            "three": "https://unpkg.com/three@0.142.0/build/three.module.js",
            "three/": "https://unpkg.com/three@0.142.0/"
          }
        }
      </script>
    <script type="module">
        import * as THREE from 'three';
        import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';
        import SplineLoader from '@splinetool/loader';
        
        // camera
        const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 5, 100000);
        camera.position.set(1579.99, 394.15, -75.49);
        camera.quaternion.setFromEuler(new THREE.Euler(-1.58, 1.34, 1.58));
        
        // scene
        const scene = new THREE.Scene();
        
        // spline scene
        const loader = new SplineLoader();
        loader.load(
          'https://prod.spline.design/0SjALngQtt3DSo1o/scene.splinecode',
          (splineScene) => {
            scene.add(splineScene);
          }
        );
        
        // renderer
        const renderer = new THREE.WebGLRenderer({ antialias: true });
        renderer.setSize(window.innerWidth, window.innerHeight);
        renderer.setAnimationLoop(animate);
        document.body.appendChild(renderer.domElement);
        
        // scene settings
        renderer.shadowMap.enabled = true;
        renderer.shadowMap.type = THREE.PCFShadowMap;
        
        scene.background = new THREE.Color('#111111');
        renderer.setClearAlpha(1);
        
        // orbit controls
        const controls = new OrbitControls(camera, renderer.domElement);
        controls.enableDamping = true;
        controls.dampingFactor = 0.125;
        
        window.addEventListener('resize', onWindowResize);
        function onWindowResize() {
          camera.aspect = window.innerWidth / window.innerHeight;
          camera.updateProjectionMatrix();
          renderer.setSize(window.innerWidth, window.innerHeight);
        }
        
        function animate(time) {
          controls.update();
          renderer.render(scene, camera);
        }
        
    </script>
    <style>
      #info {
        position: absolute;
        top: 10px;
        width: 100%;
        text-align: center;
        z-index: 100;
        display: block;
      }
    </style>
  </body>
</html>
